let mongoose,cors,express,bodyParser,dotenv,home,recipe;_f13‍.x([["app",()=>app],["env",()=>env]]);_f13‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_f13‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_f13‍.w("express",[["default",["express"],function(v){express=v}]]);_f13‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_f13‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_f13‍.w("./app/api/home",[["default",["home"],function(v){home=v}]]);_f13‍.w("./app/api/recipe",[["default",["recipe"],function(v){recipe=v}]]);







       const app = express();
       const env = dotenv.config();

const url = `mongodb+srv://${process.env.MONGO_DB_USER}:${process.env.MONGO_DB_PASSWORD}@cluster0.zzejt.mongodb.net/${process.env.MONGO_DB}?retryWrites=true&w=majority`
mongoose.connect(url, {useNewUrlParser: true, useUnifiedTopology: true});

const db = mongoose.connection;
db.on('error', _f13‍.g.console.error.bind(_f13‍.g.console, 'MongoDb connection error: '));

const corsOptions = {
  origin: "http://localhost:3000"
};

app.use(cors(corsOptions));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

app.use('/', home);
app.use('/api/recipes', recipe);

const hostname = process.env.HOST;
const port = process.env.PORT;

app.listen(port, function() {
    console.log(`Server running at http://${hostname}:${port}/`);
});